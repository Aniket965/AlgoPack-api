{
  "mainALGO": "$temp = []\r\n# Conquer\r\ndef conquer_merge(array, left, right, mid)\r\n    #temp = [None] * len(array)\r\n    i = left\r\n    j = mid + 1\r\n    k = left\r\n\r\n    while i <= mid and j <= right\r\n        if array[i] <= array[j]\r\n            $temp[k] = array[i]\r\n            i += 1\r\n        else\r\n            $temp[k] = array[j]\r\n            j += 1\r\n        end\r\n        k += 1\r\n    end\r\n    while i <= mid\r\n        $temp[k] = array[i]\r\n        i += 1\r\n        k += 1\r\n    end\r\n    while j <= right\r\n        $temp[k] = array[j]\r\n        j += 1\r\n        k += 1\r\n    end\r\n    while left <= right\r\n        array[left] = $temp[left]\r\n        left += 1\r\n    end\r\nend\r\n\r\n# Divide array into halves\r\ndef divide(array, left, right)\r\n    if left < right\r\n        mid = (left + (right - left) / 2).to_i\r\n\r\n        divide(array, left, mid)\r\n        divide(array, mid + 1, right)\r\n\r\n        conquer_merge(array, left, right, mid)\r\n    end\r\nend\r\n\r\ndef Merge_Sort(array)\r\n    $temp = [0] * array.length\r\n    divide(array, 0, array.length - 1)\r\n    $temp.clear\r\nend\r\n\r\narray = [2, 4, 3, 1, 6, 8, 4] #Hard Coded Array\r\n\r\nMerge_Sort(array)\r\n\r\nprint(array)\r\n\r\n# Output\r\n# 1 2 3 4 4 6 8\r\n"
}
