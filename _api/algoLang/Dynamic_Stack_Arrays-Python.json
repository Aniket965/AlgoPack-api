{
  "mainALGO": "class Dynamic_Stack:\n\tcapacity = 0\n\tstack = []\n\n\tdef __init__(self, capacity):\n\t\tself.capacity = capacity\n\t\tself.stack = []\n\n\tdef isFull(self):\n\t\treturn len(self.stack) == self.capacity\n\n\tdef isEmpty(self):\n\t\treturn len(self.stack) == 0\n\n\tdef push(self, element):\n\t\tif(self.isFull()):\n\t\t\treturn\n\t\telse:\n\t\t\tself.stack.append(element)\n\n\tdef pop(self):\n\t\tif(self.isEmpty()):\n\t\t\treturn -1\n\t\telse:\n\t\t\ttemp = self.stack[-1]\n\t\t\tself.stack[:-2]\n\t\t\treturn temp\n\n\tdef peek(self):\n\t\tif(self.isEmpty()):\n\t\t\treturn -1\n\t\telse:\n\t\t\treturn self.stack[-1]\n\n# Example\na = Dynamic_Stack(4)\n\nprint(a.isEmpty())\na.push(1)\nprint(a.isEmpty())\na.push(2)\na.push(3)\nprint(a.isFull())\na.push(4)\nprint(a.isFull())\nprint(a.peek())\nprint(a.pop())\nprint(a.peek())\n"
}
