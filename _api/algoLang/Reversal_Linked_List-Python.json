{
  "mainALGO": "from __future__ import print_function #used for modifying how print works\n\nclass Node(object):\n    def __init__(self, data=None, next_node=None):\n        self.data =data\n        self.next_node = next_node\n\n    def reverse_iterative(self,n):\n        last = None\n        current = n\n\n        while(current is not None):\n            next_node = current.next_node\n            current.next_node = last\n            last = current\n            current = next_node\n\n        return last\n\n#chain together the node.  n3 will be head while n0 the tail\nn0 = Node(4,None)\nn1 = Node(3,n0)\nn2 = Node(2,n1)\nn3 = Node(1,n2)\n\nhead = n3 # the head of the nodes\nprint(\"Before Reverse\", end=\" \")\nwhile head:\n    print(head.data ,end=\" \")\n    head = head.next_node\n\nprint(\"\\nAfter Reverse\", end=\" \")\nhead = n3  # the head of the nodes\nn = Node() # will contain reverse linked_list\nn = head.reverse_iterative(head)\nwhile n:\n    print(n.data ,end=\" \")\n    n = n.next_node\n"
}
