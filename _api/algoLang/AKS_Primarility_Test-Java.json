{
  "mainALGO": "import java.util.Scanner;\n\nclass AKS{\n    public static void main(String[] args){\n    \n        //Prints all the primes less than 100000000\n        \n        for(int i=0;i<1000000;i++)\n        {\n            if(isprm(i))\n            {\n                System.out.println(i);\n            }\n    }\n    }\n    \n    \n    \n    /*\n\n\nCheck if n is a perfect power: if n = ab for integers a > 1 and b > 1, output composite.\n\n\nFind the smallest r such that ordr(n) > (log2 n)2. (if r and n are not coprime, then skip this r)\n\n\nFor all 2 ≤ a ≤ min(r, n−1), check that a does not divide n: If a|n for some 2 ≤ a ≤ min(r, n−1), output composite.\n\n\nIf n ≤ r, output prime.\n\n\nFor a = 2 to sqrt(phi (r))*log(2)(n)  \n\tif (X+a)n≠ Xn+a (mod Xr − 1,n), output composite;\n\n\nOutput prime.\n\n*/\n\n    \n    public  static boolean isprm(long n)\n    {   long i=5,w=2;\n        if(n==2 || n==3)\n        return true;\n        if(n%2 ==0 ||n%3==0||n==1)\n            return false;\n            while(i*i<=n)\n            {\n                if(n%1==0)\n                    return false;\n                    i +=w;\n                    w=6-w;\n                    \n            }\n            return true;\n    }\n}\n"
}
