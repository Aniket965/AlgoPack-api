{
  "mainALGO": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint lis(vector<int> const arr)\n{\n        int n=arr.size();\n\n        // array that contains the longest increasing subsequence until element i\n        vector<int> lis(arr.size());\n\n        for (int i=0; i < n; ++i) {\n                lis[i]=1;\n        }\n\n        int ans=-1<<30; // length of the lis starts with -infinite\n\n        for (int i=1;i<n;++i) {\n                for (int j=0; j < i; ++j) {\n                        if (arr[j]<arr[i]) {\n                                lis[i]=max(lis[i], lis[j]+1);\n                                ans=max(ans, lis[i]);\n                        }\n                }\n        }\n\n        return ans;\n}\n\nint main()\n{\n        ios::sync_with_stdio(false);\n\n        // arr = array of elements\n        vector<int> arr{10, 22, 9, 33, 21, 50, 41, 60};\n\n        cout << \"Size of the longest increasing subsequence: \" << lis(arr) << \"\\n\";\n}\n"
}
