{
  "mainALGO": "#include <stdio.h>\n#include <stdlib.h>\n\n//A structure having data and link representing a node in linked list\ntypedef struct node\n{\n\tint data;\n\tstruct node *link;\n}node;\n\nnode *front=NULL,*rear=NULL;\n\n//A fuction to check for empty queue\nint isEmpty()\n{\n\tif (front == NULL)\n\t\treturn 1;\n\telse\n\t\treturn 0;\n}\n\n//Fuction to insert node in queue\nvoid enqueue(int elt)\n{\n\tnode *newNode;\n\tnewNode = (node *)malloc(sizeof(node));\n\tnewNode->data = elt;\n\tnewNode->link = NULL;\n\tif (newNode == NULL)\n\t{\n\t\tprintf(\"Memory is not allocated\\n\");\n\t\treturn;\n\t}\n\tif (front == NULL)\n\t{\n\t\tfront = newNode;\n\t\trear = newNode;\n\t}\n\telse\n\t{\n\t\trear->link = newNode;\n\t\trear = newNode;\n\t}\n\tprintf(\"%d inserted in the queue\\n\", elt);\n}\n\n//Function to delete a node from queue\nvoid dequeue()\n{\n\tint data;\n\tif (isEmpty())\n\t{\n\t\tprintf(\"Queue is empty\\n\");\n\t\treturn;\n\t}\n\tdata = front->data;\n\tprintf(\"Element deleted is %d\\n\", data);\n\tfront = front->link;\n}\n\n//Fucntion to display the queue\nvoid display()\n{\n\tnode *ptr;\n\tif (isEmpty())\n\t{\n\t\tprintf(\"Queue is empty\\n\");\n\t\treturn;\n\t}\n\tprintf(\"The queue is\\n\");\n\tfor (ptr = front; ptr != NULL; ptr = ptr->link)\n\t\tprintf(\"%d\\t\", ptr->data);\n\tprintf(\"\\n\");\n}\n\n\nint main()\n{\n\tdequeue();\n\tenqueue(15);\n\tenqueue(49);\n\tenqueue(54);\n\tenqueue(2);\n\tenqueue(97);\n\tdisplay();\n\tdequeue();\n\tdequeue();\n\tdisplay();\n\treturn 0;\n}\n\n/* Output\nQueue is empty\n15 inserted in the queue\n49 inserted in the queue\n54 inserted in the queue\n2 inserted in the queue\n97 inserted in the queue\nThe queue is\n15\t49\t54\t2\t97\nElement deleted is 15\nElement deleted is 49\nThe queue is\n54\t2\t97\n*/\n"
}
