{
  "mainALGO": "#include <iostream>\n\nusing namespace std;\n\nint Ternary_Search(int array[], int left, int right, int desired)\n{\n   if(right >= left)\n   {\n        int mid1 = left + (right - left) / 3;\n        int mid2 = mid1 + (right - left) / 3;\n\n        // If x is present at the mid1\n        if(array[mid1] == desired)\n            return mid1;\n\n        // If x is present at the mid2\n        if(array[mid2] == desired)\n            return mid2;\n\n        // If x is present in left one-third\n        if(array[mid1] > desired)\n            return Ternary_Search(array, left, mid1 - 1, desired);\n\n        // If x is present in right one-third\n        if(array[mid2] < desired)\n            return Ternary_Search(array, mid2 + 1, right, desired);\n\n        // If x is present in middle one-third\n        return Ternary_Search(array, mid1 + 1, mid2 - 1, desired);\n   }\n\n   // We reach here when element is not present in array\n   return -1;\n}\n\nint main()\n{\n    int array[] = {1, 2, 3, 4, 5, 6, 7};\n\n    // Element 4 to be searched\n    if(Ternary_Search(array, 0, 6, 4) != -1)\n        cout << \"Found\" << endl;\n    else\n        cout << \"Not Found\" << endl;\n\n    //Element 9 to be searched\n    if(Ternary_Search(array, 0, 6, 9) != -1)\n        cout << \"Found\" << endl;\n    else\n        cout << \"Not Found\" << endl;\n\n    return 0;\n}\n\n/* Output\n\nFound\nNot Found\n\n*/\n"
}
