{
  "mainALGO": "// A C++ program to demonstrate working of Chinese Remainder Theorem\n\n// NAIVE IMPLEMENTATION\n\n/*\n\n  s is size of num[] and rem[].  Returns the smallest\n  number a such that:\n  a % num[0] = rem[0],\n  a % num[1] = rem[1],\n  ..................\n  a % num[s-1] = rem[s-1]\n  Assumption: Numbers in num[] are pairwise coprime\n  (gcd for every pair is 1)\n\n*/\n\n#include <iostream>\n\nusing namespace std;\n\nint min(int num[], int rem[], int s)\n{\n\tint a = 1; // Initialize result\n  \twhile(true)\n  \t{\n\t\tint i;\n     \tfor (i = 0; i < s; i++)\n\t\t{\n       \t\tif(a%num[i] != rem[i])\n        \t\tbreak;\n\t\t}\n\n        // If all remainders matched, we found a\n       \tif (i == s)\n       \t\treturn a;\n       \t// Else try next number\n       \ta++;\n  \t}\n  \treturn a;\n}\n\n\n// Driver function\nint main()\n{\n\tint num[] = {3, 4, 5};\n\tint rem[] = {2, 3, 1};\n\tint s = sizeof(num) / sizeof(num[0]);\n\tcout << \"Number is \" << min(num, rem, s);\n\treturn 0;\n}\n\n/* Output\n\n  Number is 11\n\n*/\n"
}
