{
  "mainALGO": "#include <stdio.h>\n#include <stdlib.h>\n\n//Structure for each vertex in graph\nstruct node\n{\n    int data;\n    struct node* next;\n};\n\n//Function to add node at the end of given root\nstruct node* insert(struct node *root,int d)\n{\n    struct node *newPtr = (struct node*)malloc(sizeof(struct node));\n    newPtr->data = d;\n    newPtr->next = NULL;\n\n    root->next = newPtr;\n\n    return newPtr;\n}\n\n//Function to perform DFS\nvoid explore(int node,int vis[],struct node start[])\n{\n    printf(\"%d \",node);\n    vis[node]=1;\n\n    struct node *ptr = start[node].next;\n\n    for(;ptr!=NULL;ptr=ptr->next)\n    {\n        if(vis[ptr->data]==0)\n        {\n            explore(ptr->data,vis,start);\n        }\n    }\n}\n\n\nint main()\n{\n    int no_of_vertices = 7,i,vis[8];\n\n    struct node start[8];\n\n    for(i=1;i<=no_of_vertices;i++)\n    {\n        start[i].data=i;\n        start[i].next=NULL;\n        vis[i]=0;\n    }\n\n    /*\n    Creates the following graph :\n                 1\n               /   \\\n              2     3\n             / \\   / \\\n            4   5 6   7\n    */\n    struct node *cur;\n    cur = insert(&start[1],2);\n    insert(cur,3);\n    cur = insert(&start[2],4);\n    insert(cur,5);\n    cur = insert(&start[3],6);\n    insert(cur,7);\n\n    //The loop takes care of non connected graph also\n    printf(\"DFS of the graph : \\n\");\n    for(i=1;i<=7;i++)\n    {\n        if(vis[i]==0)\n            explore(i,vis,start);\n    }\n\n    return 0;\n\n\n    // Output : 1 2 4 5 3 6 7\n}\n"
}
