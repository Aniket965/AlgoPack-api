{
  "mainALGO": "insertion = (array) ->\n    for i in [0...array.length]\n        temp = array[i]\n        j = i - 1\n\n        while j >= 0 and array[j] > temp\n            array[j + 1] = array[j]\n            j--\n\n        array[j + 1] = temp\n    array\n\nMerge_Sort = (array) ->\n    if array.length <= 8\n        return insertion array\n\n    mid = Math.floor(array.length / 2)\n\n    # Divide array into two halves\n    left = Merge_Sort(array.slice 0, mid)\n    right = Merge_Sort(array.slice mid)\n\n    result = []\n    p1 = p2 = 0\n\n    # Conquer and merge array\n    while true\n        if p1 >= left.length\n            if p2 >= right.length\n                return result\n            result.push right[p2]\n            p2 += 1\n        else if p2 >= right.length or left[p1] < right[p2]\n            result.push left[p1]\n            p1 += 1\n        else\n            result.push right[p2]\n            p2 += 1\n\narray = [2, 4, 3, 1, 6, 8, 4, 10, 11, 0, 15, 7, 9]\n\nconsole.log Merge_Sort array\n\n\n### Output\n\n[ 0, 1, 2, 3, 4, 4, 6, 7, 8, 9, 10, 11, 15 ]\n\n###\n"
}
