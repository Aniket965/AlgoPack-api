{
  "mainALGO": "// Calculating inverse using extended Euclidean algorithm iterative method\nusing System;\n\nnamespace Insertion_Sort\n{\n    class Program\n    {\n        public static int inverse(int a, int m)\n        {\n            int m0 = m;\n            int x0 = 0;\n            int x1 = 1;\n            if (m == 1)\n                return 0;\n\n            int q, t;\n            while (a > 1)\n            {\n                q = a / m;\n                t = m;\n                m = a % m;\n                a = t;\n                t = x0;\n                x0 = x1 - q * x0;\n                x1 = t;\n            }\n            if (x1 < 0)\n                x1 += m0;\n            return x1;\n        }\n\n        public static int findMinimumDividend(int[] divisor, int[] remainder)\n        {\n            int product = 1;\n            int i, result, partialProduct;\n            int len = divisor.GetLength(0);\n\n            for (i = 0; i < len; i++)\n                product *= divisor[i];\n\n            result = 0;\n\n            for (i = 0; i < len; i++)\n            {\n                partialProduct = product / divisor[i];\n                result += remainder[i] * inverse(partialProduct, divisor[i]) * partialProduct;\n            }\n            return (result % product);\n        }\n\n        static void Main(String[] args)\n        {\n            int[] divisor = { 3, 4, 5, 7, 11 };\n            int[] remainder = { 2, 3, 1, 4, 5 };\n            int Result = findMinimumDividend(divisor, remainder);\n            Console.WriteLine(\"Minimum value of dividend is : \" + Convert.ToString(Result));\n            Console.WriteLine();\n            Console.ReadLine();\n        }\n    }\n}\n\n// Output\n// Minimum value of dividend is : 3371\n"
}
