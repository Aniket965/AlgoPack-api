{
  "mainALGO": "class Quick_Sort\n{\n    // Conquer\n    public static int Parition(int[] array, int left, int right)\n    {\n        int pivot = array[left];\n        int index = right;\n        int temp;\n\n        for(int j = right; j > left; j--)\n        {\n            if(array[j] > pivot)\n            {\n                temp = array[j];\n                array[j] = array[index];\n                array[index] = temp;\n                index--;\n            }\n        }\n\n        array[left] = array[index];\n        array[index] = pivot;\n        return index;\n    }\n\n    // Divide array into halves\n    public static void Quick(int[] array, int left, int right)\n    {\n        if(left < right)\n        {\n            int pivot = Parition(array, left, right);\n\n            Quick(array, left, pivot - 1);\n            Quick(array, pivot + 1, right);\n        }\n    }\n\n    public static void QuickSort(int array[], int size)\n    {\n        Quick(array, 0, size - 1);\n    }\n\n    // function ro print array\n    public static void Print_Array(int[] array, int size)\n    {\n        for(int i = 0; i < size; i++)\n            System.out.print(array[i] + \" \");\n\n        System.out.println();\n    }\n\n    public static void main(String[] args)\n    {\n        int[] array = {2, 4, 3, 1, 6, 8, 4};\n        QuickSort(array, 7);\n        Print_Array(array, 7);\n    }\n}\n\n// Output\n// 1 2 3 4 4 6 8\n"
}
