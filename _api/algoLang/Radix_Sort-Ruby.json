{
  "mainALGO": "def counting_sort(input_arr, exp)\n  count_arr = Array.new(10, 0)\n  result = Array.new(input_arr.size)\n\n  m = 10 ** (exp+1)\n  n = 10 ** exp\n\n  input_arr.each do |item|\n    count_arr[(item % m) / n] += 1\n  end\n\n  for i in 1...10\n    count_arr[i] = count_arr[i-1] + count_arr[i]\n  end\n\n  i = input_arr.size - 1\n  until i < 0 do\n    item = input_arr[i]\n    count_arr[(item % m) / n] -= 1\n    result[count_arr[(item % m) / n]] = item\n    i -= 1\n  end\n\n  result\nend\n\ndef radix_sort(arr)\n  maximum = arr.max\n  exp = 0\n\n  until maximum == 0 do\n    exp += 1\n    maximum = maximum / 10\n  end\n\n  for i in 0...exp do\n    arr = counting_sort(arr, i)\n  end\n\n  arr\nend\n\narray = [170, 45, 75, 90, 802, 24, 2, 66]\narray = radix_sort(array)\n\nprint array\nputs\n\n# Output\n# [2, 24, 45, 66, 75, 90, 170, 802]\n"
}
