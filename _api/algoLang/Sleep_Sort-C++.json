{
  "mainALGO": "#include <iostream>\n#include <thread>\n#include <chrono>\n#include <vector>\n#include <mutex>\n\nstd::mutex lock;\n\nvoid sortThread(const int x) {\n  std::chrono::milliseconds duration{ x * 10 };\n\n  std::this_thread::sleep_for(duration);\n\n  lock.lock();\n  std::cout << x << \" \";\n  lock.unlock();\n}\n\nint main() {\n  std::vector<int> x = { 2, 4, 3, 1, 6, 8, 4 };\n  std::vector<std::thread> threads;\n\n  for (const auto &i : x) {\n    threads.push_back(std::thread(sortThread, i));\n  }\n\n  for (auto it = threads.begin(); it != threads.end(); ++it) {\n    it->join();\n  }\n\n  std::cout << \"\\n\";\n}\n\n// Output\n// 1 2 3 4 4 6 8\n"
}
