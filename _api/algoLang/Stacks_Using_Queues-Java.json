{
  "mainALGO": "package Stacks;\n\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.LinkedList;\nimport java.util.Queue;\n\n/**\n * Created by Last on 10/19/2016.\n */\npublic class Push_Efficient\n{\n    Queue<Integer> q1 = new LinkedList<Integer>(), q2 = new LinkedList<Integer>();\n\n    public void push(int data){\n        q1.add(data);\n    }\n\n    public Integer pop(){\n        if (q1.isEmpty()){\n            return Integer.MIN_VALUE;\n        }\n        else{\n            if (q1.size() == 1){\n                return q1.remove();\n            }\n            else{\n                int size = q1.size();\n                for (int i = 0; i < size-1; i++) {\n                    q2.add(q1.remove());\n                }\n                int x = q1.remove();\n                q1 = q2;\n                return x;\n            }\n        }\n    }\n\n    public void printStack(){\n        for (int x:\n             q1) {\n            System.out.println(\"\"+x);\n        }\n    }\n\n    //Driver method\n    public static void main(String[] args) {\n        Push_Efficient push_efficient = new Push_Efficient();\n\n        push_efficient.push(10);\n        push_efficient.push(20);\n        push_efficient.push(30);\n        push_efficient.push(40);\n        push_efficient.push(50);\n\n        push_efficient.pop();\n\n        push_efficient.push(60);\n        push_efficient.push(70);\n\n        push_efficient.pop();\n\n        push_efficient.push(80);\n\n        push_efficient.printStack();\n    }\n}\n\n//Output\n//10\n//20\n//30\n//40\n//60\n//80\n"
}
