{
  "mainALGO": "package main\n\nimport (\n    \"fmt\"\n    \"math\"\n)\n\nfunc floyd_warshall(graph [][]float64) [][]float64 {\n    dist := make([][]float64, len(graph))\n\n    // Initialises a distance matrix\n    for i := range graph {\n        dist[i] = make([]float64, len(graph))\n    }\n\n    for i := range graph {\n        for j := range graph[i] {\n            dist[i][j] = graph[i][j]\n        }\n    }\n\n    // Implements the Floyd Warshall Algorithm\n    for k := range dist {\n        for i := range dist {\n            for j := range dist {\n                if dij := dist[i][k] + dist[k][j]; dij < dist[i][j] {\n                    dist[i][j] = dij\n                }\n            }\n        }\n    }\n    return dist\n}\n\nfunc main() {\n    graph := [][]float64{\n        {0, 5, math.Inf(1), 10},\n        {math.Inf(1), 0, 3, math.Inf(1)},\n        {math.Inf(1), math.Inf(1), 0, 1},\n        {math.Inf(1), math.Inf(1), math.Inf(1), 0},\n    }\n\n    dist := floyd_warshall(graph)\n    for _, d := range dist {\n        fmt.Printf(\"%4g\\n\", d)\n    }\n}\n\n//OUTPUT\n//[   0    5    8    9]\n//[+Inf    0    3    4]\n//[+Inf +Inf    0    1]\n//[+Inf +Inf +Inf    0]\n"
}
