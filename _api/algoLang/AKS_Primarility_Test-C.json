{
  "mainALGO": "#include <stdio.h>\n/*\n\nCheck if n is a perfect power: if n = ab for integers a > 1 and b > 1, output composite.\n\n\nFind the smallest r such that ordr(n) > (log2 n)2. (if r and n are not coprime, then skip this r)\n\n\nFor all 2 ≤ a ≤ min(r, n−1), check that a does not divide n: If a|n for some 2 ≤ a ≤ min(r, n−1), output composite.\n\n\nIf n ≤ r, output prime.\n\n\nFor a = 2 to sqrt(phi (r))*log(2)(n)  \n\tif (X+a)n≠ Xn+a (mod Xr − 1,n), output composite;\n\n\nOutput prime.\n\n*/\nint isprm(long long n)\n{\n\tlong long i = 5, w = 2;\n\tif (n == 2 || n==3)\n\t\treturn 1;\n\tif(n%2 == 0 || n%3 == 0 || n == 1)\n\t\treturn 0;\n\twhile(i*i <= n)\n\t{\n\t\tif(n%i == 0)\n\t\t\treturn 0;\n\t\ti += w;\n\t\tw = 6 - w;\n\t}\n\treturn 1;\n}\n\nint main()\n{\n\t// Prints all prime less than 100000000\n\tfor (int i = 1; i <= 100000000; i++)\n\t{\n\t\tif(isprm(i) == 1)\n\t\t\tprintf(\"%d\\n\",i);\n\t}\n\treturn 0;\n}\n"
}
