{
  "mainALGO": "class Merge_Sort\n{\n    public static int temp[];\n\n    // Conquer\n    public static void conquer_merge(int[] array, int left, int right, int mid)\n    {\n        int k = left, i, j;\n\n        for(i = left, j = mid + 1; i <= mid && j <= right; k++)\n        {\n            if(array[i] <= array[j])\n            {\n                temp[k] = array[i];\n                i++;\n            }\n            else\n            {\n                temp[k] = array[j];\n                j++;\n            }\n        }\n\n        while(i <= mid)\n        {\n            temp[k] = array[i];\n            i++;\n            k++;\n        }\n\n        while(j <= right)\n        {\n            temp[k] = array[j];\n            j++;\n            k++;\n        }\n\n        for(i = left; i <= right; i++)\n            array[i] = temp[i];\n    }\n\n    // Divide array into halves\n    public static void divide(int[] array, int left, int right)\n    {\n        if(left < right)\n        {\n            int mid = left + (right - left) / 2;\n\n            divide(array, left, mid);\n            divide(array, mid + 1, right);\n\n            conquer_merge(array, left, right, mid);\n        }\n    }\n\n    public static void MergeSort(int array[], int size)\n    {\n        temp = new int[size];\n        divide(array, 0, size - 1);\n        temp = null;\n    }\n\n    // function ro print array\n    public static void Print_Array(int[] array, int size)\n    {\n        for(int i = 0; i < size; i++)\n            System.out.print(array[i] + \" \");\n\n        System.out.println();\n    }\n\n    public static void main(String[] args)\n    {\n        int[] array = {2, 4, 3, 1, 6, 8, 4};\n        MergeSort(array, 7);\n        Print_Array(array, 7);\n    }\n}\n\n// Output\n// 1 2 3 4 4 6 8\n"
}
