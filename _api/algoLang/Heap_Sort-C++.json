{
  "mainALGO": "#include <iostream>\n\nusing namespace std;\n\nvoid Heapify(int array[], int root, int size)\n{\n    int left = 2 * root + 1, largest;\n    int right = left + 1, temp;\n\n    if(left < size && array[left] > array[root])\n        largest = left;\n    else\n        largest = root;\n\n    if(right < size && array[right] > array[largest])\n        largest = right;\n\n    if(largest != root)\n    {\n        temp = array[root];\n        array[root] = array[largest];\n        array[largest] = temp;\n        Heapify(array, largest, size);\n    }\n}\n\nvoid Build_Heap(int array[], int size)\n{\n    for(int i = (size - 1) / 2; i >= 0; i--)\n        Heapify(array, i, size);\n}\n\nvoid Heap_Sort(int array[], int size)\n{\n    Build_Heap(array, size);\n    int temp, i;\n\n    for(i = size - 1; i > 0; i--)\n    {\n        temp = array[0];\n        array[0] = array[i];\n        array[i] = temp;\n        Heapify(array, 0, i);\n    }\n}\n\n// Function to print elements of array\nvoid Print_Array(int array[], int size)\n{\n    for(int i = 0; i < size; i++)\n        cout << array[i] << \" \";\n\n    cout << endl;\n}\n\nint main()\n{\n    int array[] = {2, 4, 3, 1, 6, 8, 4};\n    Heap_Sort(array, 7);\n    Print_Array(array, 7);\n    return 0;\n}\n\n// Output\n// 1 2 3 4 4 6 8\n"
}
