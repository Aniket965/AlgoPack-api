{
  "mainALGO": "var front = -1;\nrear = -1;\nvar size = 4;\n\nvar queue = new Array(size);\n\n/**\n * Checks is the queue is empty.\n * @returns {Bool} True if the queue is empty.\n */\nfunction isEmpty() {\n  if(front == -1 || front > rear)\n    return true;\n  else\n    return false;\n}\n\n/**\n * Adds an element to the queue.\n * @param {Object|String|Number} element - The element to be added to the queue.\n */\nfunction enqueue(element) {\n  if (rear == size - 1)\n    console.log(\"Queue is full.\");\n  else {\n    if(front == -1)\n      front = 0;\n\n    rear += 1;\n    queue[rear] = element;\n    console.log(element + \" was entered successfully.\");\n  }\n}\n\n/**\n * Removes the element in position \"front\" from the queue.\n */\nfunction dequeue() {\n  if(isEmpty())\n    console.log(\"Queue is currently empty.\");\n  else {\n    var deletion = queue[front];\n    front++;\n    console.log(deletion + \" has been removed.\");\n  }\n}\n\n/**\n * Prints out the elements in the queue.\n */\nfunction display() {\n  for(var i = front; i <= rear; i ++) {\n    console.log(queue[i] + \"\\n\");\n  }\n}\n\nenqueue(23);\nenqueue(45);\nenqueue(65);\nenqueue(89);\nenqueue(90);\ndequeue();\ndequeue();\ndisplay();\n\n/**\n* OUTPUT:\n* 23 was entered successfully.\n* 45 was entered successfully.\n* 65 was entered successfully.\n* 89 was entered successfully.\n* Queue is full.\n* 23 has been removed.\n* 45 has been removed.\n* 65\n* 89\n*/\n"
}
