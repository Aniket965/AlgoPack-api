{
  "mainALGO": "#include <iostream>\n\nusing namespace std;\n\n// Quick Sort using Bentley-McIlroy 3-way Partitioning\nvoid Quick_Sort_3way(int array[], int left, int right)\n{\n    int pivot = array[right];\n    int i = left -1;\n    int j = right;\n    int p = left - 1;\n    int q = right;\n\n    if(right <= left) return;\n\n    while(true)\n    {\n        while(array[++i] < pivot) {}\n\n        while(pivot < array[--j])\n        {\n              if (j == left) break;\n        }\n\n        if(i >= j) break;\n        swap(array[i], array[j]);\n\n        if(array[i] == pivot)\n        {\n            p++;\n            swap(array[p], array[i]);\n        }\n\n        if(array[j] == pivot)\n        {\n            q--;\n            swap(array[j], array[q]);\n        }\n    }\n\n    swap(array[i], array[right]);\n    j = i - 1;\n    i = i + 1;\n\n    for(int k = left; k < p; k++, j--)\n        swap(array[k], array[j]);\n\n    for(int k = right - 1; k > q; k--, i++)\n        swap(array[i], array[k]);\n\n    Quick_Sort_3way(array, left, j);\n    Quick_Sort_3way(array, i, right);\n}\n\n// Function to print elements of array\nvoid Print_Array(int array[], int size)\n{\n    for(int i = 0; i < size; i++)\n        cout << array[i] << \" \";\n\n    cout << endl;\n}\n\n// Driver Function\nint main()\n{\n    int array[] = {2, 4, 3, 1, 6, 8, 4};\n    int size = sizeof(array) / sizeof(int);\n    Quick_Sort_3way(array, 0, size - 1);\n    Print_Array(array, size);\n    return 0;\n}\n\n// Output\n// 1 2 3 4 4 6 8\n"
}
