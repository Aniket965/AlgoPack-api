{
  "mainALGO": "#include<stdio.h>\n#include<malloc.h>\n\n/* Link list node */\ntypedef struct node\n{\n    int data;\n    struct node *next;\n}node;\n\nnode *head=NULL;\n\n/*Function to create a linked list*/\nvoid createll()\n{\n\tint i,n;\n\tnode *tail; // keeps track of the last element\n\ttail=head; //atm head is the last element\n\tprintf(\"Enter the size:\");\n\tscanf(\"%d\",&n);\n\tprintf(\"Enter the data:\\n\");\n\tfor(i=1;i<=n;i++)\n\t{\n\t\t\tnode *newn;\n\t\t\tnewn=(node*)malloc(sizeof(node)); //creates a new node in every iteration\n\n\n\t\t\tscanf(\"%d\",&newn->data);\n\t\t\tnewn->next = NULL;\n\t\t\tif(head==NULL)\n\t\t\t{\n\t\t\t\thead=newn;\n\t\t\t\ttail=head;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttail->next=newn; //linking the previous last element to new last element\n\t\t\t\ttail=newn; //making the new element as the last element\n\t\t\t}\n\t}\n}\n\n/* Function to print linked list */\nvoid display()\n{\n    struct node *temp = head;\n    while(temp != NULL)\n    {\n        printf(\"%d  \", temp->data);\n        temp = temp->next;\n    }\n    printf(\"\\n\");\n}\n\n/* function to swap data of two nodes a and b*/\nvoid swap(node *a,node *b)\n{\n    int temp = a->data;\n    a->data = b->data;\n    b->data = temp;\n}\n\n/*Function to bubble sort*/\nvoid bubble()\n{\n\tint ctr,n=1;\n\tnode *t1,*t2;\n\tt1=head;\n\tdo\n\t{\n\t\tctr=0;\n\t\tt2=head;\n\t\twhile(t2->next!=NULL)\n\t\t{\n\t\t\tif(t2->data > t2->next->data)\n\t\t\t{\n\t\t\t\tswap(t2,t2->next);\n\t\t\t\tctr=1;\n\t\t\t}\n\t\t\tt2=t2->next;\n\t\t}\n\t\tt1=t1->next;\n\t\tprintf(\"After iteration %d : \",n);\n\t\tdisplay();\n\t\tn++;\n\t}while(t1->next!=NULL && ctr);\n}\n\nvoid main()\n{\n\tcreatell();\n\tprintf(\"\\nBefore Sorting: \");\n\tdisplay();\n\tbubble();\n\tprintf(\"\\nAfter Sorting: \");\n\tdisplay();\n}\n"
}
